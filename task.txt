Программа с консольным интерфейсом в диалоге выводит пользователю список задач на исполнение (Task List). Кол-во возможных задач не ограничено.
Задача включает в себя следующие параметры:

    Заголовок, текст, не более 50 символов
    Описание, текст, неограниченно
    Приоритет, число от 0 до 10, чем больше тем важнее задача
    Срок, дата
    Статус, одно из значений перечисления: new, in_progress, done.
    Дата когда задача была выполнена, дата (когда быт проставлен статус done)

Данные содержатся в XML-файле. Программа должна иметь возможность считать файл с данными при запуске.

Примерная структура файла (может быть и другой):
<ToDoList>
<Task id="1" caption="Заголовок задачи">
            <Description>Описание задачи</Description>
            <Priority>100</Priority>
            <Deadline>2017-02-12</Deadline>
            <Status>done</Status>
            <Complete>2017-02-19</Complete>
</Task>
<Task id="2" caption="Заголовок еще одной задачи">
            <Description>Описание еще одной задачи</Description>
            <Priority>10</Priority>
            <Deadline>2022-02-12</Deadline>
            <Status>new</Status>
</Task>
</ToDoList>

Программа должна иметь возможность:

1. Заводить новые задачи, редактировать, удалять, помечать задачи как выполненные
2. Выводить список задач по определенным параметрам:

    Вывод задач в работе, выполненных, новых
    Вывод всех задач

Созданные, отредактированные и удалённые задачи должны сохраняться обратно в XML-файл.

Пример используемых команд:

Вывод справки по командам: help
Вывод задач:

    всех: list
    новых: list -s new
    в работе: list -s in_progress
    выполненных: list -s done


Пометить задачу как выполненную: complete "идентификатор", проставить дату завершения текущей датой.

Добавить новую задачу: new и вводим значения "Заголовок", "Описание", "Важность", "Срок" в диалоге. Статус автоматически устанавливается в new.

Редактировать: edit "идентификатор" и вводим значения "Заголовок", "Описание", "Важность", "Срок"  в диалоге, предусмотреть возможность оставить текущее значение без изменений.

Удалить: remove "идентификатор"

    Реализация на языке программирования Java 8 или выше.
    При реализации можно использовать любые стандартные библиотеки Java, идущие в составе JDK.
    Наличие JavaDoc (хотя бы по одному из классов) приветствуется
    Наличие unit-тестов (хотя бы по одному из классов) приветствуется
    Дизайн приложения, который позволит в будущем перейти от формата ввода-вывода в виде XML-файла на JSON или YAML, без переписывания существенной его части, приветствуется.
    Использование дополнительных зависимостей, кроме JUnit, не приветствуется.
    Исходный код работающего приложения опубликовать в репозитории на GitHub - приветствуется